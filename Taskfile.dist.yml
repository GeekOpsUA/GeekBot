# https://taskfile.dev

version: "3"

env:
  CGO_ENABLED: "0"
  TARGET_OS: linux
  TARGET_ARCH: arm64

  TARGET_OS_LIST: linux darwin windows
  TARGET_ARCH_LIST: amd64 arm64

  APP_NAME: github.com/geekopsua/geekbot

tasks:
  fmt:
    desc: Run go fmt
    cmds:
      - go fmt ./cmd
  lint:
    desc: Run golangci-lint
    cmds:
      - golangci-lint run ./cmd
  test:
    desc: Run tests
    cmds:
      - go test -v -cover ./...

  build:
    aliases: ["default"]
    deps:
      - fmt
      - lint
      - test
    desc: Build binaries
    summary: |
      Build binary for default platform

      I.e., it takes the values of the environment variables
      defined in the `env` section and uses them to build
      Also it takes appVersion variable as a parameter

      Example:
      task build appVersion=v1.0.0
    cmds:
      - >-
        CGO_ENABLED=${CGO_ENABLED};
        GOOS=${TARGET_OS};
        GOARCH=${TARGET_ARCH};
        echo "Building for ${GOOS}/${GOARCH} ${APP_NAME}:{{.appVersion}}";
        go build -o bin/geekbot
        -ldflags "-X=${APP_NAME}/cmd.appVersion={{.appVersion}}"

  build-all:
    deps:
      - fmt
      - lint
    desc: Build binaries for all platforms
    cmds:
      - >-
        for os in ${TARGET_OS_LIST}; do
          for arch in ${TARGET_ARCH_LIST}; do
            CGO_ENABLED=${CGO_ENABLED}
            GOOS=$os
            GOARCH=$arch
            go build -o bin/geekbot
            -ldflags "-X=${APP_NAME}/cmd.appVersion={{.appVersion}}"
          done
        done
